{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/src/app/projects/Products.module.css [app-client] (css module)"],"sourcesContent":["__turbopack_export_value__({\n  \"add-project\": \"Products-module__5Joorq__add-project\",\n  \"container\": \"Products-module__5Joorq__container\",\n  \"error\": \"Products-module__5Joorq__error\",\n  \"loading\": \"Products-module__5Joorq__loading\",\n  \"modal\": \"Products-module__5Joorq__modal\",\n  \"modal-overlay\": \"Products-module__5Joorq__modal-overlay\",\n  \"notification\": \"Products-module__5Joorq__notification\",\n  \"pagination\": \"Products-module__5Joorq__pagination\",\n  \"project-list\": \"Products-module__5Joorq__project-list\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"}},
    {"offset": {"line": 17, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 119, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Divyesh/Desktop/admin-module-nextjs/src/app/projects/page.tsx"],"sourcesContent":["'use client';\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport styles from './Products.module.css'; // Importing the CSS module\r\n\r\ninterface Project {\r\n  id: string;\r\n  name: string;\r\n  price: number;\r\n  status: string;\r\n  describe_project?: string;\r\n  created_at: string;\r\n  updated_at: string;\r\n}\r\n\r\nconst Products = () => {\r\n  const [notification, setNotification] = useState<string>(\"\");\r\n  const [projects, setProjects] = useState<Project[]>([]);\r\n  const [newProject, setNewProject] = useState<string>(\"\");\r\n  const [newPrice, setNewPrice] = useState<string>(\"\");\r\n  const [error, setError] = useState<string>(\"\");\r\n  const [loading, setLoading] = useState<boolean>(false);\r\n  const [pendingCount, setPendingCount] = useState<number>(0);\r\n  const [currentPage, setCurrentPage] = useState<number>(1);\r\n  const [totalPages, setTotalPages] = useState<number>(1);\r\n\r\n  // State for modal (to show project details in a popup)\r\n  const [showModal, setShowModal] = useState<boolean>(false);\r\n  const [selectedProject, setSelectedProject] = useState<Project | null>(null);\r\n\r\n  // Fetch projects when the component mounts or page changes\r\n  useEffect(() => {\r\n    fetchProjects();\r\n  }, [currentPage]);\r\n\r\n  // Fetch projects from the API\r\n  const fetchProjects = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const response = await axios.get<Project[]>(`http://localhost:3000/api/projects?page=${currentPage}&limit=7`);\r\n      console.log(\"Fetched Projects:\", response.data);\r\n\r\n      if (response.data && Array.isArray(response.data)) {\r\n        const fetchedProjects = response.data.map((project) => ({\r\n          ...project,\r\n          price: !isNaN(project.price) && project.price !== null ? project.price : 0,\r\n        }));\r\n        setProjects(fetchedProjects);\r\n        setTotalPages(Number(response.headers['x-total-pages']) || 1);\r\n\r\n        const count = fetchedProjects.filter((project) => project.status === \"Pending\").length;\r\n        setPendingCount(count);\r\n      } else {\r\n        setError(\"No valid projects found in the response.\");\r\n      }\r\n    } catch (err: any) {\r\n      console.error(\"Error fetching projects:\", err);\r\n      setError(err.response?.data?.message || \"Error fetching projects\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Add a new project to the system\r\n  const addProject = async () => {\r\n    if (!newProject.trim() || !newPrice.trim() || isNaN(Number(newPrice)) || Number(newPrice) <= 0) {\r\n      setError(\"Please fill in all fields correctly. Price must be a positive number.\");\r\n      return;\r\n    }\r\n\r\n    const newProjectObj = {\r\n      name: newProject.trim(),\r\n      price: parseFloat(newPrice),\r\n      status: \"Pending\",\r\n    };\r\n\r\n    setLoading(true);\r\n    setError(\"\"); // Reset error state before making the request\r\n    try {\r\n      await axios.post(\"http://localhost:3000/api/projects\", newProjectObj);\r\n      setNotification(\"New project added!\");\r\n      setTimeout(() => setNotification(\"\"), 5000); // Hide notification after 5 seconds\r\n      fetchProjects(); // Refresh the list of projects\r\n      setNewProject(\"\");\r\n      setNewPrice(\"\");\r\n    } catch (err: any) {\r\n      setError(err.response?.data?.message || \"Error adding project\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Handle the deletion of a project\r\n  const deleteProject = async (id: string) => {\r\n    setLoading(true);\r\n    try {\r\n      await axios.delete(`http://localhost:3000/api/projects/${id}`);\r\n      setNotification(\"Project deleted!\");\r\n      setTimeout(() => setNotification(\"\"), 5000); // Hide notification after 5 seconds\r\n      fetchProjects(); // Refresh the list of projects\r\n    } catch (err: any) {\r\n      setError(err.response?.data?.message || \"Error deleting project\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Update the project status\r\n  const updateProjectStatus = async (id: string, newStatus: string) => {\r\n    setLoading(true);\r\n    try {\r\n      await axios.patch(`http://localhost:3000/api/projects/${id}`, { status: newStatus });\r\n      setNotification(\"Project status updated!\");\r\n      setTimeout(() => setNotification(\"\"), 5000); // Hide notification after 5 seconds\r\n      fetchProjects(); // Refresh the list of projects\r\n    } catch (err: any) {\r\n      setError(err.response?.data?.message || \"Error updating project status\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Open project details modal\r\n  const openProjectDetails = (project: Project) => {\r\n    setSelectedProject(project);\r\n    setShowModal(true);\r\n  };\r\n\r\n  // Close project details modal\r\n  const closeProjectDetails = () => {\r\n    setShowModal(false);\r\n    setSelectedProject(null);\r\n  };\r\n\r\n  const handleNextPage = () => {\r\n    if (currentPage < totalPages) {\r\n      setCurrentPage(currentPage + 1);\r\n    }\r\n  };\r\n\r\n  const handlePreviousPage = () => {\r\n    if (currentPage > 1) {\r\n      setCurrentPage(currentPage - 1);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <h1>Manage Projects</h1>\r\n\r\n      {/* Display Notification */}\r\n      {notification && <div className={styles.notification}>{notification}</div>}\r\n      {error && <div className={styles.error}>{error}</div>}\r\n\r\n      {/* Add Project Form */}\r\n      <div className={styles['add-project']}>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Project Name\"\r\n          value={newProject}\r\n          onChange={(e) => setNewProject(e.target.value)}\r\n        />\r\n        <input\r\n          type=\"number\"\r\n          placeholder=\"Price\"\r\n          value={newPrice}\r\n          onChange={(e) => setNewPrice(e.target.value)}\r\n        />\r\n        <button onClick={addProject} disabled={loading}>\r\n          {loading ? \"Adding...\" : \"Add Project\"}\r\n        </button>\r\n      </div>\r\n\r\n      {/* Show loading state */}\r\n      {loading && <div className={styles.loading}>Loading...</div>}\r\n\r\n      {/* Display List of Projects in Table */}\r\n      <div className={styles['project-list']}>\r\n        {projects.length > 0 ? (\r\n          <table>\r\n            <thead>\r\n              <tr>\r\n                <th>Project Name</th>\r\n                <th>Price</th>\r\n                <th>Status</th>\r\n                <th>Created At</th>\r\n                <th>Actions</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {projects.map((project) => (\r\n                <tr key={project.id}>\r\n                  <td>{project.name}</td>\r\n                  <td>\r\n                    {typeof project.price === \"number\" && !isNaN(project.price)\r\n                      ? `$${project.price.toFixed(2)}`\r\n                      : \"Invalid Price\"}\r\n                  </td>\r\n                  <td>{project.status}</td>\r\n                  <td>{new Date(project.created_at).toLocaleString()}</td>\r\n                  <td>\r\n                    {/* View Details button */}\r\n                    <button onClick={() => openProjectDetails(project)} disabled={loading}>\r\n                      View Details\r\n                    </button>\r\n                    <button onClick={() => deleteProject(project.id)} disabled={loading}>\r\n                      Delete\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        ) : (\r\n          <div>No projects found</div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Display Pending Projects Count */}\r\n      <p>Total Pending Projects: {pendingCount}</p>\r\n\r\n      {/* Pagination Controls */}\r\n      <div className={styles['pagination']}>\r\n        <button onClick={handlePreviousPage} disabled={currentPage === 1 || loading}>\r\n          Previous\r\n        </button>\r\n        <span>Page {currentPage} of {totalPages}</span>\r\n        <button onClick={handleNextPage} disabled={currentPage === totalPages || loading}>\r\n          Next\r\n        </button>\r\n      </div>\r\n\r\n      {/* Modal Dialog for Project Details */}\r\n      {showModal && selectedProject && (\r\n        <div className={styles['modal-overlay']}>\r\n          <div className={styles['modal']}>\r\n            <h2>Project Details</h2>\r\n            <p><strong>ID:</strong> {selectedProject.id}</p>\r\n            <p><strong>Name:</strong> {selectedProject.name}</p>\r\n            <p><strong>Description:</strong> {selectedProject.describe_project || \"No description\"}</p>\r\n            <p><strong>Status:</strong> {selectedProject.status}</p>\r\n            <p><strong>Created At:</strong> {new Date(selectedProject.created_at).toLocaleString()}</p>\r\n            <div>\r\n              <button onClick={() => updateProjectStatus(selectedProject.id, \"Accepted\")} disabled={loading}>\r\n                Mark as Accepted\r\n              </button>\r\n              <button onClick={() => updateProjectStatus(selectedProject.id, \"Rejected\")} disabled={loading}>\r\n                Mark as Rejected\r\n              </button>\r\n              <button onClick={() => updateProjectStatus(selectedProject.id, \"On Hold\")} disabled={loading}>\r\n                Mark as On Hold\r\n              </button>\r\n            </div>\r\n            <button onClick={closeProjectDetails}>Close</button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Products;\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 669, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}